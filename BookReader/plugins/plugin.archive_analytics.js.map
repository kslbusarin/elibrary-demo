{"version":3,"file":"plugins/plugin.archive_analytics.js","mappings":"mJAUsCA,E,wBAN/BC,OAAOC,WAAWC,eAAgB,CACvCC,wBAAwB,EAExBC,uBAAuB,IAGzBH,WAAWI,UAAUC,MAAiBP,EAQnCE,WAAWI,UAAUC,KAPf,WAAW,WAChBP,EAAOQ,KAAKC,MAERA,KAAKC,QAAQN,wBACfK,KAAKE,KAAKT,WAAWU,WAAWC,gBAAgB,kBAAM,EAAKC,0CAMjEZ,WAAWI,UAAUQ,mCAAqC,WACxD,GAAKC,OAAOC,kBAAZ,CAIA,IAAMC,EAAeR,KAAKK,mCAAmCG,aAEvDC,EAAST,KAAKU,oBACdC,EAAcX,KAAKY,mBAAmBH,GAE5C,GAAID,GAAgBG,EAAa,CAC/B,IAAME,EAAS,CACbC,WAAY,oBACZC,OAAQf,KAAKgB,OACbC,WAAYC,KAAKC,SAGnBN,QAAiB,EACjBA,QAAiB,GACjB,IACEA,EAAOO,QAAUd,OAAOe,IAAIC,SAASC,SAASC,MAAM,kBAChD,EACA,EACJX,EAAOY,SACJZ,EAAOO,SAAWd,OAAOe,IAAIC,SAASI,SAASF,MAAM,gBAClD,EACA,EACN,MAAOG,IAITrB,OAAOC,kBAAkBqB,UAAUf,EAAQ,KAAM,uBAGjD,IAAMgB,EAAwB7B,KAAKC,QAAQ6B,aAAe9B,KAAKC,QAAQ6B,YAAYC,OAC/E,CAAEA,OAAQ/B,KAAKC,QAAQ6B,YAAYC,QACnC,GACJzB,OAAOC,kBAAkByB,WAAW,aAAc,kBAAmB1B,OAAOgB,SAASI,SAAUG,GAE/F7B,KAAKK,mCAAmCG,aAAeG,KAW3DlB,WAAWI,UAAUoC,0BAA4B,SAASC,EAAUC,EAAQC,EAAOP,GAC5E7B,KAAKC,QAAQN,yBAEdK,KAAKC,QAAQL,uBACfyC,QAAQC,IAAI,4BAA6BC,UAAWjC,OAAOC,mBAGxDD,OAAOC,oBAEZsB,EAAwBA,GAAyB,GAC5B,iBAAVO,IACTP,EAAsBW,GAAKJ,GAE7B9B,OAAOC,kBAAkByB,WAAWE,EAAUC,EAAQ,KAAMN,Q","sources":["webpack://@internetarchive/bookreader/./src/plugins/plugin.archive_analytics.js"],"sourcesContent":["/* global BookReader */\r\n/**\r\n * Plugin for Archive.org analytics\r\n */\r\njQuery.extend(BookReader.defaultOptions, {\r\n  enableArchiveAnalytics: true,\r\n  /** Provide a means of debugging, cause otherwise it's impossible to test locally */\r\n  debugArchiveAnaltyics: false,\r\n});\r\n\r\nBookReader.prototype.init = (function(super_) {\r\n  return function() {\r\n    super_.call(this);\r\n\r\n    if (this.options.enableArchiveAnalytics) {\r\n      this.bind(BookReader.eventNames.fragmentChange, () => this.archiveAnalyticsSendFragmentChange());\r\n    }\r\n  };\r\n})(BookReader.prototype.init);\r\n\r\n/** @private */\r\nBookReader.prototype.archiveAnalyticsSendFragmentChange = function() {\r\n  if (!window.archive_analytics) {\r\n    return;\r\n  }\r\n\r\n  const prevFragment = this.archiveAnalyticsSendFragmentChange.prevFragment;\r\n\r\n  const params = this.paramsFromCurrent();\r\n  const newFragment = this.fragmentFromParams(params);\r\n\r\n  if (prevFragment != newFragment) {\r\n    const values = {\r\n      bookreader: \"user_changed_view\",\r\n      itemid: this.bookId,\r\n      cache_bust: Math.random()\r\n    };\r\n    // EEK!  offsite embedding and /details/ page books look the same in analytics, otherwise!\r\n    values.offsite = 1;\r\n    values.details = 0;\r\n    try {\r\n      values.offsite = window.top.location.hostname.match(/\\.archive.org$/)\r\n        ? 0\r\n        : 1;\r\n      values.details =\r\n        !values.offsite && window.top.location.pathname.match(/^\\/details\\//)\r\n          ? 1\r\n          : 0;\r\n    } catch (e) {}\r\n    // avoids embed cross site exceptions -- but on (+) side, means it is and keeps marked offite!\r\n\r\n    // Send bookreader ping\r\n    window.archive_analytics.send_ping(values, null, \"augment_for_ao_site\");\r\n\r\n    // Also send tracking event ping\r\n    const additionalEventParams = this.options.lendingInfo && this.options.lendingInfo.loanId\r\n      ? { loanId: this.options.lendingInfo.loanId }\r\n      : {};\r\n    window.archive_analytics.send_event('BookReader', 'UserChangedView', window.location.pathname, additionalEventParams);\r\n\r\n    this.archiveAnalyticsSendFragmentChange.prevFragment = newFragment;\r\n  }\r\n};\r\n\r\n/**\r\n * Sends a tracking \"Event\". See https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#events\r\n * @param {string} category\r\n * @param {string} action\r\n * @param {number} [value] (must be an int)\r\n * @param {Object} [additionalEventParams]\r\n */\r\nBookReader.prototype.archiveAnalyticsSendEvent = function(category, action, value, additionalEventParams) {\r\n  if (!this.options.enableArchiveAnalytics) return;\r\n\r\n  if (this.options.debugArchiveAnaltyics) {\r\n    console.log(\"archiveAnalyticsSendEvent\", arguments, window.archive_analytics);\r\n  }\r\n\r\n  if (!window.archive_analytics) return;\r\n\r\n  additionalEventParams = additionalEventParams || {};\r\n  if (typeof(value) == 'number') {\r\n    additionalEventParams.ev = value;\r\n  }\r\n  window.archive_analytics.send_event(category, action, null, additionalEventParams);\r\n};\r\n"],"names":["super_","extend","BookReader","defaultOptions","enableArchiveAnalytics","debugArchiveAnaltyics","prototype","init","call","this","options","bind","eventNames","fragmentChange","archiveAnalyticsSendFragmentChange","window","archive_analytics","prevFragment","params","paramsFromCurrent","newFragment","fragmentFromParams","values","bookreader","itemid","bookId","cache_bust","Math","random","offsite","top","location","hostname","match","details","pathname","e","send_ping","additionalEventParams","lendingInfo","loanId","send_event","archiveAnalyticsSendEvent","category","action","value","console","log","arguments","ev"],"sourceRoot":""}